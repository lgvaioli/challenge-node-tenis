{"version":3,"sources":["App.module.css","GrandSlam.module.css","AtpStatsApi.js","GrandSlam.js","App.js","index.js"],"names":["module","exports","axios","require","default","AtpStatsApi","tourneyId","Promise","resolve","reject","post","then","response","data","catch","err","GrandSlam","props","useState","className","styles","loader","mostSinglesPlayer","setMostSinglesPlayer","useEffect","handleClickOnPlayer","mostRecentYearEl","document","getElementById","id","currentOpacity","style","opacity","getMostSingles","mostSinglesEntry","mostRecentYear","wins","length","mostRecentYearId","onClick","player","YearBox","message","GrandSlamContainer","name","GRAND_SLAMS","App","grandSlamsEl","map","curr","key","AppContainer","ReactDOM","render","StrictMode"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,aAAe,4B,sDCAjCD,EAAOC,QAAU,CAAC,mBAAqB,sCAAsC,QAAU,2BAA2B,OAAS,0BAA0B,MAAQ,2B,kKCDvJC,EAAQC,EAAQ,IAASC,QAMlBC,EAAb,4GAGwBC,GACpB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BP,EACCQ,KARuB,wBAQK,CAAEJ,cAC9BK,MAAK,SAACC,GACL,OAAOJ,EAAQI,EAASC,SAEzBC,OAAM,SAACC,GACN,OAAON,EAAOM,aAXtB,KCFO,SAASC,EAAUC,GAAQ,IAAD,EACmBC,mBAAS,yBAAKC,UAAWC,IAAOC,QAAvB,eAD5B,mBACxBC,EADwB,KACLC,EADK,KAkC/B,OA9BAC,qBAAU,WACR,IAAMC,EAAsB,WAC1B,IAAMC,EAAmBC,SAASC,eAAT,wBAAyCX,EAAMY,KAClEC,EAAiBJ,EAAiBK,MAAMC,QAC9CN,EAAiBK,MAAMC,QAA8B,MAAnBF,GAA2BA,EAAwB,IAAN,KAGjFzB,EACC4B,eAAehB,EAAMY,IACrBlB,MAAK,SAACuB,GAIL,IAAMC,EAAiBD,EAAiBE,KAAKF,EAAiBE,KAAKC,OAAS,GAGtEC,EAAgB,wBAAoBrB,EAAMY,IAEhDN,EACE,6BACE,wBAAIgB,QAASd,GAAsBS,EAAiBM,QACpD,yBAAKrB,UAAWC,IAAOqB,SAAS,wBAAIZ,GAAIS,GAAmBH,SAIhErB,OAAM,SAACC,GACNQ,EAAqB,4BAAKR,EAAI2B,eAE/B,CAACzB,EAAMY,KAGR,yBAAKV,UAAWC,IAAOuB,oBACrB,4BAAK1B,EAAM2B,KAAX,wBACCtB,GCrCP,IAAMuB,EAAc,CAClB,CAAED,KAAM,iBAAkBf,GAAI,KAC9B,CAAEe,KAAM,gBAAiBf,GAAI,KAC7B,CAAEe,KAAM,YAAaf,GAAI,KACzB,CAAEe,KAAM,UAAWf,GAAI,MAiBViB,MAdf,WACE,IAAMC,EAAeF,EAAYG,KAAI,SAACC,GACpC,OACE,kBAACjC,EAAD,CAAW4B,KAAMK,EAAKL,KAAMf,GAAIoB,EAAKpB,GAAIqB,IAAKD,EAAKpB,QAIvD,OACE,yBAAKV,UAAWC,IAAO+B,cACpBJ,ICfPK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3B,SAASC,eAAe,W","file":"static/js/main.b055007c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"App_AppContainer__381b2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GrandSlamContainer\":\"GrandSlam_GrandSlamContainer__sZtwr\",\"YearBox\":\"GrandSlam_YearBox__28JtZ\",\"loader\":\"GrandSlam_loader__fuzhJ\",\"load5\":\"GrandSlam_load5__1m9QO\"};","const axios = require('axios').default;\n\n// FIXME: Move this into a common config file shared with the backend.\n// If the server changes the endpoint, and we don't update the value here, we're in trouble.\nconst MOST_SINGLES_ENDPOINT = '/atpstats/mostSingles';\n\nexport class AtpStatsApi {\n  // Gets player with most won singles. Returns a promise which resolves to an object\n  // { player: 'Name', wins: [1994, 1995] } on success, or rejects with an error.\n  static getMostSingles(tourneyId) {\n    return new Promise((resolve, reject) => {\n      axios\n      .post(MOST_SINGLES_ENDPOINT, { tourneyId })\n      .then((response) => {\n        return resolve(response.data);\n      })\n      .catch((err) => {\n        return reject(err);\n      })\n    });\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport styles from './GrandSlam.module.css';\nimport { AtpStatsApi } from './AtpStatsApi';\n\nexport function GrandSlam(props) {\n  const [mostSinglesPlayer, setMostSinglesPlayer] = useState(<div className={styles.loader}>Loading...</div>);\n\n  // Fetch data on first render\n  useEffect(() => {\n    const handleClickOnPlayer = () => {\n      const mostRecentYearEl = document.getElementById(`mostRecentYear${props.id}`);\n      const currentOpacity = mostRecentYearEl.style.opacity;\n      mostRecentYearEl.style.opacity = (currentOpacity === '0' || !currentOpacity) ? '1' : '0';\n    }\n\n    AtpStatsApi\n    .getMostSingles(props.id)\n    .then((mostSinglesEntry) => {\n      // Do note that we assume the years are sorted in ascending order, i.e. wins[n] <= wins[n + 1].\n      // We could sort them to make sure, but it's kinda wasteful given that the spreadsheet will\n      // probably not change anytime soon.\n      const mostRecentYear = mostSinglesEntry.wins[mostSinglesEntry.wins.length - 1];\n\n      // Used to get element in click handler above\n      const mostRecentYearId = `mostRecentYear${props.id}`;\n\n      setMostSinglesPlayer(\n        <div>\n          <h2 onClick={handleClickOnPlayer}>{mostSinglesEntry.player}</h2>\n          <div className={styles.YearBox}><h3 id={mostRecentYearId}>{mostRecentYear}</h3></div>\n        </div>\n      );\n    })\n    .catch((err) => {\n      setMostSinglesPlayer(<h1>{err.message}</h1>);\n    })\n  }, [props.id]);\n\n  return (\n    <div className={styles.GrandSlamContainer}>\n      <h1>{props.name} Most Singles Winner</h1>\n      {mostSinglesPlayer}\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './App.module.css';\nimport { GrandSlam } from './GrandSlam';\n\nconst GRAND_SLAMS = [\n  { name: 'Autralian Open', id: 580 },\n  { name: 'Roland Garros', id: 520 },\n  { name: 'Wimbledon', id: 540 },\n  { name: 'US Open', id: 560 },\n];\n\nfunction App() {\n  const grandSlamsEl = GRAND_SLAMS.map((curr) => {\n    return (\n      <GrandSlam name={curr.name} id={curr.id} key={curr.id} />\n    );\n  })\n\n  return (\n    <div className={styles.AppContainer}>\n      {grandSlamsEl}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}